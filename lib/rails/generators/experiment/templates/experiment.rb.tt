<% module_namespacing do -%>
class <%= class_name %>Experiment < <%= parent_class_name.classify %>
<% variant_names.each do |variant| -%>
<% if variant == "control" -%>
  <%= variant -%> { }
<% else -%>
  variant(:<%= variant -%>) { }
<% end -%>
<% end -%>

<% unless options[:skip_comments] -%>
<% unless variant_names.include?("control") -%>
  # Specify a default variant to use when the experiment is skipped:
  #use_default_variant :<%= variant_names.first %>
  #
<% end -%>
  # Run this experiment by providing a context (current_user in this example),
  # and optionally override the variant behaviors:
  #
  #   <%= class_name %>Experiment.run(current_user) do |experiment|
<% variant_names.each do |variant| -%>
  #     experiment.on(:<%= variant -%>) { "overridden <%= variant -%>" }
<% end -%>
  #   end
  #
  # Each context (user) will consistently have the same variant assigned. More
  # advanced logic can be provided to segment contexts into specific variants:
  #
  #segment :old_accounts, into: :<%= variant_names.last %>
  #def old_accounts
  #  context.created_at < 1.year.ago
  #end
<% end -%>
end
<% end -%>
