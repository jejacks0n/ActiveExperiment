<% module_namespacing do -%>
class <%= class_name %>Experiment < <%= parent_class_name.classify %>
<% variant_names.each do |variant| -%>
<% if %w[control].include?(variant) -%>
  <%= variant -%> { }
<% else -%>
  variant(:<%= variant -%>) { }
<% end -%>
<% end -%>

<% unless options[:skip_comments] -%>
  # Experiments are divided into two concepts. The definition, and when run.
  #
  # The definition is the code that defines the experiment. This is the code
  # that helps us test that the experiment will work as expected when run.
  #
  # When running an experiment a context should be provided, and variants can
  # be overridden. The context is used by the experiment to make decisions and
  # should be consistent across runs. A common example is the current_user:
  #
  #   <%= class_name %>Experiment.run(current_user) do |experiment|
<% variant_names.each do |variant| -%>
  #     experiment.on(:<%= variant -%>) { "overridden <%= variant -%>" }
<% end -%>
  #   end
  #
  # Each user will consistently get the same variant.
  #
  # Segmenting allows for advanced logic to determine which variant should be
  # assigned. For example, one variant could be assigned to all old accounts,
  # and another to all users with a given name:
  #
  #segment :old_accounts, into: :<%= variant_names.first %>
  #segment(into: :<%= variant_names.last -%>) { context.first_name == "Richard" }
  #def old_accounts
  #  context.created_at < 1.year.ago
  #end
<% end -%>
end
<% end -%>
